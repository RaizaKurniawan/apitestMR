{
  "stats": {
    "suites": 8,
    "tests": 72,
    "passes": 72,
    "pending": 0,
    "failures": 0,
    "start": "2023-12-20T02:00:29.531Z",
    "end": "2023-12-20T02:00:39.629Z",
    "duration": 10098,
    "testsRegistered": 72,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7f7b0fcb-ca39-4371-b927-f0daffbf48a6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "321e7a6f-70de-4ba7-80c2-84e656087b70",
          "title": "Get Mythic List Sorted by Code Ascending and Descending",
          "fullFile": "C:\\raizakurniawan\\apitestMR\\apiMythRepo\\dev\\asc-desSort.js",
          "file": "\\apiMythRepo\\dev\\asc-desSort.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Get Mythic List Sorted by Code Ascending and Descending\"",
              "fullTitle": "Get Mythic List Sorted by Code Ascending and Descending \"before each\" hook in \"Get Mythic List Sorted by Code Ascending and Descending\"",
              "timedOut": false,
              "duration": 27,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "apiResponse = await axios.get(createURL('confirmed/mythic?sortBy=2'));",
              "err": {},
              "uuid": "b99ed851-369a-4fd8-9cd6-f816d4575b57",
              "parentUUID": "321e7a6f-70de-4ba7-80c2-84e656087b70",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Get Mythic List Sorted by Code Ascending and Descending\"",
              "fullTitle": "Get Mythic List Sorted by Code Ascending and Descending \"before each\" hook in \"Get Mythic List Sorted by Code Ascending and Descending\"",
              "timedOut": false,
              "duration": 27,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "apiResDesc = await axios.get(createURL('confirmed/mythic?sortBy=3'));",
              "err": {},
              "uuid": "c2c52912-b6cf-424a-9ff1-e6588e2bdd3c",
              "parentUUID": "321e7a6f-70de-4ba7-80c2-84e656087b70",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to get Confirm Mythic list sorted by code ascending",
              "fullTitle": "Get Mythic List Sorted by Code Ascending and Descending Should be able to get Confirm Mythic list sorted by code ascending",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mythicData = apiResponse?.data?.mythic;\nconsole.log(\"datta:\");\nconsole.log(apiResponse.data.data.mythic);\nexpect(apiResponse.status).to.equal(200);",
              "err": {},
              "uuid": "111b7ade-12a7-4661-a1c8-f53da2082dde",
              "parentUUID": "321e7a6f-70de-4ba7-80c2-84e656087b70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Another test that uses the API response",
              "fullTitle": "Get Mythic List Sorted by Code Ascending and Descending Another test that uses the API response",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(apiResponse.data.data.mythic);",
              "err": {},
              "uuid": "6fad8c67-8f04-42cb-bab1-b4d8d559fa30",
              "parentUUID": "321e7a6f-70de-4ba7-80c2-84e656087b70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Confirm Mythic list sorted by code descending",
              "fullTitle": "Get Mythic List Sorted by Code Ascending and Descending Should be able to get Confirm Mythic list sorted by code descending",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const mythicData = apiResDesc?.data?.mythic;\nconsole.log(\"datta:\");\nconsole.log(apiResDesc.data.data.mythic);\nexpect(apiResDesc.status).to.equal(200);",
              "err": {},
              "uuid": "20841f25-6ed0-4cb3-98b1-fc34fef58a30",
              "parentUUID": "321e7a6f-70de-4ba7-80c2-84e656087b70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Another test that uses the API response",
              "fullTitle": "Get Mythic List Sorted by Code Ascending and Descending Another test that uses the API response",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(apiResDesc.data.data.mythic);",
              "err": {},
              "uuid": "28ae9fa2-f8f6-42e8-83f4-8f33b11733fb",
              "parentUUID": "321e7a6f-70de-4ba7-80c2-84e656087b70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "111b7ade-12a7-4661-a1c8-f53da2082dde",
            "6fad8c67-8f04-42cb-bab1-b4d8d559fa30",
            "20841f25-6ed0-4cb3-98b1-fc34fef58a30",
            "28ae9fa2-f8f6-42e8-83f4-8f33b11733fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 55,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "9306dda8-dee4-4949-92d2-b7bc7f66222d",
          "title": "Get query SortBy Top Rated",
          "fullFile": "C:\\raizakurniawan\\apitestMR\\apiMythRepo\\dev\\get-query-sortby.js",
          "file": "\\apiMythRepo\\dev\\get-query-sortby.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Confirm Mythic Sorting List by Top Rated",
              "fullTitle": "Get query SortBy Top Rated Get Confirm Mythic Sorting List by Top Rated",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/mythic'), { sortBy: 'TOPRATED'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "5bb3be3b-f960-46a5-94d9-9fe8492302fe",
              "parentUUID": "9306dda8-dee4-4949-92d2-b7bc7f66222d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Mythic Sorting List by Top Rated",
              "fullTitle": "Get query SortBy Top Rated Get Unconfirm Mythic Sorting List by Top Rated",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/mythic'), { sortBy: 'TOPRATED'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "3a968b66-3c20-4932-8f4e-3e641635b263",
              "parentUUID": "9306dda8-dee4-4949-92d2-b7bc7f66222d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Casefile Sorting List by Top Rated",
              "fullTitle": "Get query SortBy Top Rated Get Confirm Casefile Sorting List by Top Rated",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/casefile'), { sortBy: 'TOPRATED'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "f8286d7e-3319-4506-b4de-858db3212b3f",
              "parentUUID": "9306dda8-dee4-4949-92d2-b7bc7f66222d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Casefile Sorting List by Top Rated",
              "fullTitle": "Get query SortBy Top Rated Get Unconfirm Casefile Sorting List by Top Rated",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/casefile'), { sortBy: 'TOPRATED'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "9ed12a28-2925-4c61-bcac-803bc9b83d56",
              "parentUUID": "9306dda8-dee4-4949-92d2-b7bc7f66222d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Dossier Sorting List by Top Rated",
              "fullTitle": "Get query SortBy Top Rated Get Confirm Dossier Sorting List by Top Rated",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/dossier'), { sortBy: 'TOPRATED'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "c2956f29-cd65-47a6-bb1b-cee3f4467ae4",
              "parentUUID": "9306dda8-dee4-4949-92d2-b7bc7f66222d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Dossier Sorting List by Top Rated",
              "fullTitle": "Get query SortBy Top Rated Get Unconfirm Dossier Sorting List by Top Rated",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/dossier'), { sortBy: 'TOPRATED'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "fa7417e2-c76a-4fb6-91f8-6ab7c56710b5",
              "parentUUID": "9306dda8-dee4-4949-92d2-b7bc7f66222d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Addendum Sorting List by Top Rated",
              "fullTitle": "Get query SortBy Top Rated Get Confirm Addendum Sorting List by Top Rated",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/addendum'), { sortBy: 'TOPRATED'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "a50af827-99fd-4257-9cce-c622b4b315c7",
              "parentUUID": "9306dda8-dee4-4949-92d2-b7bc7f66222d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Addendum Sorting List by Top Rated",
              "fullTitle": "Get query SortBy Top Rated Get Unconfirm Addendum Sorting List by Top Rated",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/addendum'), { sortBy: 'TOPRATED'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "e9044f4e-7d73-4413-842b-1b959942ddd1",
              "parentUUID": "9306dda8-dee4-4949-92d2-b7bc7f66222d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5bb3be3b-f960-46a5-94d9-9fe8492302fe",
            "3a968b66-3c20-4932-8f4e-3e641635b263",
            "f8286d7e-3319-4506-b4de-858db3212b3f",
            "9ed12a28-2925-4c61-bcac-803bc9b83d56",
            "c2956f29-cd65-47a6-bb1b-cee3f4467ae4",
            "fa7417e2-c76a-4fb6-91f8-6ab7c56710b5",
            "a50af827-99fd-4257-9cce-c622b4b315c7",
            "e9044f4e-7d73-4413-842b-1b959942ddd1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 321,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "4ec44415-0e29-4cdd-8963-fc10c3f0091f",
          "title": "Get query SortBy Lowest Code",
          "fullFile": "C:\\raizakurniawan\\apitestMR\\apiMythRepo\\dev\\get-query-sortby.js",
          "file": "\\apiMythRepo\\dev\\get-query-sortby.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Confirm Mythic Sorting List by Lowest Code",
              "fullTitle": "Get query SortBy Lowest Code Get Confirm Mythic Sorting List by Lowest Code",
              "timedOut": false,
              "duration": 51,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/mythic'), { sortBy: 'LOWESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "a0d7d49c-2afa-4b2f-ac86-27f18f024983",
              "parentUUID": "4ec44415-0e29-4cdd-8963-fc10c3f0091f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Mythic Sorting List by Lowest Code",
              "fullTitle": "Get query SortBy Lowest Code Get Unconfirm Mythic Sorting List by Lowest Code",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/mythic'), { sortBy: 'LOWESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "bc487b63-93bd-40b2-947f-93a48bb7cb96",
              "parentUUID": "4ec44415-0e29-4cdd-8963-fc10c3f0091f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Casefile Sorting List by Lowest Code",
              "fullTitle": "Get query SortBy Lowest Code Get Confirm Casefile Sorting List by Lowest Code",
              "timedOut": false,
              "duration": 51,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/casefile'), { sortBy: 'LOWESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "3d2d7268-dca5-4a1b-90ee-5cec08ddc542",
              "parentUUID": "4ec44415-0e29-4cdd-8963-fc10c3f0091f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Casefile Sorting List by Lowest Code",
              "fullTitle": "Get query SortBy Lowest Code Get Unconfirm Casefile Sorting List by Lowest Code",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/casefile'), { sortBy: 'LOWESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "2391a47c-8470-4e16-b1ee-b58a07888e99",
              "parentUUID": "4ec44415-0e29-4cdd-8963-fc10c3f0091f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Dossier Sorting List by Lowest Code",
              "fullTitle": "Get query SortBy Lowest Code Get Confirm Dossier Sorting List by Lowest Code",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/dossier'), { sortBy: 'LOWESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "38f0e434-4b94-466e-98ae-614489b3455b",
              "parentUUID": "4ec44415-0e29-4cdd-8963-fc10c3f0091f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Dossier Sorting List by Lowest Code",
              "fullTitle": "Get query SortBy Lowest Code Get Unconfirm Dossier Sorting List by Lowest Code",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/dossier'), { sortBy: 'LOWESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "0650e37b-4382-4752-b7f2-c0bbad3b9d9e",
              "parentUUID": "4ec44415-0e29-4cdd-8963-fc10c3f0091f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Addendum Sorting List by Lowest Code",
              "fullTitle": "Get query SortBy Lowest Code Get Confirm Addendum Sorting List by Lowest Code",
              "timedOut": false,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/addendum'), { sortBy: 'LOWESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "48941cdb-3c98-4d58-8582-ffd97401b896",
              "parentUUID": "4ec44415-0e29-4cdd-8963-fc10c3f0091f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Addendum Sorting List by Lowest Code",
              "fullTitle": "Get query SortBy Lowest Code Get Unconfirm Addendum Sorting List by Lowest Code",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/addendum'), { sortBy: 'LOWESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "6bd57c6d-ec81-4e95-9f91-8ac4f9f8c02d",
              "parentUUID": "4ec44415-0e29-4cdd-8963-fc10c3f0091f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0d7d49c-2afa-4b2f-ac86-27f18f024983",
            "bc487b63-93bd-40b2-947f-93a48bb7cb96",
            "3d2d7268-dca5-4a1b-90ee-5cec08ddc542",
            "2391a47c-8470-4e16-b1ee-b58a07888e99",
            "38f0e434-4b94-466e-98ae-614489b3455b",
            "0650e37b-4382-4752-b7f2-c0bbad3b9d9e",
            "48941cdb-3c98-4d58-8582-ffd97401b896",
            "6bd57c6d-ec81-4e95-9f91-8ac4f9f8c02d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 339,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e6674cbb-aeb7-42a7-b873-0456a5089bd5",
          "title": "Get query SortBy Highest Code",
          "fullFile": "C:\\raizakurniawan\\apitestMR\\apiMythRepo\\dev\\get-query-sortby.js",
          "file": "\\apiMythRepo\\dev\\get-query-sortby.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Confirm Mythic Sorting List by Highest Code",
              "fullTitle": "Get query SortBy Highest Code Get Confirm Mythic Sorting List by Highest Code",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/mythic'), { sortBy: 'HIGHESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "4c6f2b9b-88e5-4182-b681-b3a27f36268e",
              "parentUUID": "e6674cbb-aeb7-42a7-b873-0456a5089bd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Mythic Sorting List by Highest Code",
              "fullTitle": "Get query SortBy Highest Code Get Unconfirm Mythic Sorting List by Highest Code",
              "timedOut": false,
              "duration": 922,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/mythic'), { sortBy: 'HIGHESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "e1d9b355-764f-4a33-a16f-ae216cd7c03e",
              "parentUUID": "e6674cbb-aeb7-42a7-b873-0456a5089bd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Casefile Sorting List by Highest Code",
              "fullTitle": "Get query SortBy Highest Code Get Confirm Casefile Sorting List by Highest Code",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/casefile'), { sortBy: 'HIGHESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "9ec29114-3c18-49b2-a7ae-cc8ea01869db",
              "parentUUID": "e6674cbb-aeb7-42a7-b873-0456a5089bd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Casefile Sorting List by Highest Code",
              "fullTitle": "Get query SortBy Highest Code Get Unconfirm Casefile Sorting List by Highest Code",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/casefile'), { sortBy: 'HIGHESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "97ff40c2-715b-4ea8-83ea-50ff7e568cfa",
              "parentUUID": "e6674cbb-aeb7-42a7-b873-0456a5089bd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Dossier Sorting List by Highest Code",
              "fullTitle": "Get query SortBy Highest Code Get Confirm Dossier Sorting List by Highest Code",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/dossier'), { sortBy: 'HIGHESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "01bc4836-9607-4e19-bc7c-b7761fcbe5f1",
              "parentUUID": "e6674cbb-aeb7-42a7-b873-0456a5089bd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Dossier Sorting List by Highest Code",
              "fullTitle": "Get query SortBy Highest Code Get Unconfirm Dossier Sorting List by Highest Code",
              "timedOut": false,
              "duration": 51,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/dossier'), { sortBy: 'HIGHESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "11fdaa06-feeb-43b9-aeb5-8ba4f71f9a21",
              "parentUUID": "e6674cbb-aeb7-42a7-b873-0456a5089bd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Addendum Sorting List by Highest Code",
              "fullTitle": "Get query SortBy Highest Code Get Confirm Addendum Sorting List by Highest Code",
              "timedOut": false,
              "duration": 45,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/addendum'), { sortBy: 'HIGHESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "ac01cff8-1099-4cab-a4c8-cc15ed31e29f",
              "parentUUID": "e6674cbb-aeb7-42a7-b873-0456a5089bd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Addendum Sorting List by Highest Code",
              "fullTitle": "Get query SortBy Highest Code Get Unconfirm Addendum Sorting List by Highest Code",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/addendum'), { sortBy: 'HIGHESTCODE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "db4b461a-2a09-4f95-a70b-dbec23abc486",
              "parentUUID": "e6674cbb-aeb7-42a7-b873-0456a5089bd5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c6f2b9b-88e5-4182-b681-b3a27f36268e",
            "e1d9b355-764f-4a33-a16f-ae216cd7c03e",
            "9ec29114-3c18-49b2-a7ae-cc8ea01869db",
            "97ff40c2-715b-4ea8-83ea-50ff7e568cfa",
            "01bc4836-9607-4e19-bc7c-b7761fcbe5f1",
            "11fdaa06-feeb-43b9-aeb5-8ba4f71f9a21",
            "ac01cff8-1099-4cab-a4c8-cc15ed31e29f",
            "db4b461a-2a09-4f95-a70b-dbec23abc486"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1229,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "4f8d288a-6451-41a5-ae60-0d9089f888be",
          "title": "Get query SortBy Latest Submision Date",
          "fullFile": "C:\\raizakurniawan\\apitestMR\\apiMythRepo\\dev\\get-query-sortby.js",
          "file": "\\apiMythRepo\\dev\\get-query-sortby.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Confirm Mythic Sorting List by Latest Submision Date",
              "fullTitle": "Get query SortBy Latest Submision Date Get Confirm Mythic Sorting List by Latest Submision Date",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/mythic'), { sortBy: 'LATESSUBMISSIONDATE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "0ea5200e-75d6-457f-a028-2b2770745f9f",
              "parentUUID": "4f8d288a-6451-41a5-ae60-0d9089f888be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Mythic Sorting List by Latest Submision Date",
              "fullTitle": "Get query SortBy Latest Submision Date Get Unconfirm Mythic Sorting List by Latest Submision Date",
              "timedOut": false,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/mythic'), { sortBy: 'LATESSUBMISSIONDATE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "f3b9c8b8-2689-4020-8d09-fce29bd04cc6",
              "parentUUID": "4f8d288a-6451-41a5-ae60-0d9089f888be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Casefile Sorting List by Latest Submision Date",
              "fullTitle": "Get query SortBy Latest Submision Date Get Confirm Casefile Sorting List by Latest Submision Date",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/casefile'), { sortBy: 'LATESSUBMISSIONDATE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "4f3933c2-9aa3-4bd1-a455-28fe257755a4",
              "parentUUID": "4f8d288a-6451-41a5-ae60-0d9089f888be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Casefile Sorting List by Latest Submision Date",
              "fullTitle": "Get query SortBy Latest Submision Date Get Unconfirm Casefile Sorting List by Latest Submision Date",
              "timedOut": false,
              "duration": 45,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/casefile'), { sortBy: 'LATESSUBMISSIONDATE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "c5bf4f73-b039-497d-b33d-c039ede431e7",
              "parentUUID": "4f8d288a-6451-41a5-ae60-0d9089f888be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Dossier Sorting List by Latest Submision Date",
              "fullTitle": "Get query SortBy Latest Submision Date Get Confirm Dossier Sorting List by Latest Submision Date",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/dossier'), { sortBy: 'LATESSUBMISSIONDATE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "e197e124-bb6b-403b-a035-8f090fd706d5",
              "parentUUID": "4f8d288a-6451-41a5-ae60-0d9089f888be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Dossier Sorting List by Latest Submision Date",
              "fullTitle": "Get query SortBy Latest Submision Date Get Unconfirm Dossier Sorting List by Latest Submision Date",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/dossier'), { sortBy: 'LATESSUBMISSIONDATE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "98eb4f29-41e8-48cb-a52a-f41fed66a594",
              "parentUUID": "4f8d288a-6451-41a5-ae60-0d9089f888be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Confirm Addendum Sorting List by Latest Submision Date",
              "fullTitle": "Get query SortBy Latest Submision Date Get Confirm Addendum Sorting List by Latest Submision Date",
              "timedOut": false,
              "duration": 45,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/addendum'), { sortBy: 'LATESSUBMISSIONDATE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "79a1c1ed-21df-415f-817b-572331b5f67c",
              "parentUUID": "4f8d288a-6451-41a5-ae60-0d9089f888be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Unconfirm Addendum Sorting List by Latest Submision Date",
              "fullTitle": "Get query SortBy Latest Submision Date Get Unconfirm Addendum Sorting List by Latest Submision Date",
              "timedOut": false,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/addendum'), { sortBy: 'LATESSUBMISSIONDATE'})\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "bfd04b6f-fafc-4a3f-aa65-17cd7a006cdc",
              "parentUUID": "4f8d288a-6451-41a5-ae60-0d9089f888be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ea5200e-75d6-457f-a028-2b2770745f9f",
            "f3b9c8b8-2689-4020-8d09-fce29bd04cc6",
            "4f3933c2-9aa3-4bd1-a455-28fe257755a4",
            "c5bf4f73-b039-497d-b33d-c039ede431e7",
            "e197e124-bb6b-403b-a035-8f090fd706d5",
            "98eb4f29-41e8-48cb-a52a-f41fed66a594",
            "79a1c1ed-21df-415f-817b-572331b5f67c",
            "bfd04b6f-fafc-4a3f-aa65-17cd7a006cdc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 362,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "55aa144e-8fea-4d15-b5ab-73752f01008b",
          "title": "Mythic Repository Get API request",
          "fullFile": "C:\\raizakurniawan\\apitestMR\\apiMythRepo\\dev\\get-req.js",
          "file": "\\apiMythRepo\\dev\\get-req.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to get Confirm Mythic list ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Confirm Mythic list ",
              "timedOut": false,
              "duration": 43,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/mythic'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "328f51ff-90df-477b-9f93-59bddb9d17ed",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Unconfirm Mythic list ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Unconfirm Mythic list ",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/mythic'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "2b6e14b4-73e0-48a3-be53-375ccd2300e5",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Mythic Detail ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Mythic Detail ",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('mythic/M-1001'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "a7a4d5f0-678e-4844-8f51-bdde71ae226a",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Confirm Casefile list ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Confirm Casefile list ",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/casefile'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "61b1f33b-ebdd-46a9-b3a2-d16d8e2c6cb3",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Unconfirm Casefile list ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Unconfirm Casefile list ",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/casefile'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "79df521e-ab1d-4203-9e20-a85135f75190",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Casefile Detail ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Casefile Detail ",
              "timedOut": false,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('casefile/C-1002'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "41087e3e-21aa-4705-a2ba-8f438d62df02",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Confirm Dossier list ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Confirm Dossier list ",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/dossier'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "0bdb0073-1ab7-4d83-b461-d1975768c3fe",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Unconfirm Dossier list ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Unconfirm Dossier list ",
              "timedOut": false,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/dossier'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "85b6109d-0b0f-4588-80eb-d42c71aeb626",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Dossier Detail ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Dossier Detail ",
              "timedOut": false,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('dossier/D-1002'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "2907ba3b-e136-4cbd-b6e1-c5200cbe5344",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Confirm Addendum list ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Confirm Addendum list ",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('confirmed/addendum'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "9f673bfd-6d4b-4933-93c7-d11a51803e73",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Unconfirm Addendum list ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Unconfirm Addendum list ",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('unconfirmed/addendum'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "cb53e248-8286-4482-9cb5-ced82f237890",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to get Addendum Detail ",
              "fullTitle": "Mythic Repository Get API request Should be able to get Addendum Detail ",
              "timedOut": false,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('addendum/C-1189-A2234'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page);\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "94addb87-2321-4cb3-9132-537897193f66",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home page Top Rated",
              "fullTitle": "Mythic Repository Get API request Home page Top Rated",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('home/top-rated'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page)\nexpect(res.status).to.equal(200)",
              "err": {},
              "uuid": "f2445ffc-d0c4-4040-8b6e-9ab59edff403",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home page Last Confirmed",
              "fullTitle": "Mythic Repository Get API request Home page Last Confirmed",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(createURL('home/last-confirmed'))\nconsole.log(JSON.stringify(res.data.data, null, 2));\nexpect(res.data.page)\nexpect(res.status).to.equal(200)",
              "err": {},
              "uuid": "eaf37030-1e17-4aa7-ba02-cf5365869a7b",
              "parentUUID": "55aa144e-8fea-4d15-b5ab-73752f01008b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "328f51ff-90df-477b-9f93-59bddb9d17ed",
            "2b6e14b4-73e0-48a3-be53-375ccd2300e5",
            "a7a4d5f0-678e-4844-8f51-bdde71ae226a",
            "61b1f33b-ebdd-46a9-b3a2-d16d8e2c6cb3",
            "79df521e-ab1d-4203-9e20-a85135f75190",
            "41087e3e-21aa-4705-a2ba-8f438d62df02",
            "0bdb0073-1ab7-4d83-b461-d1975768c3fe",
            "85b6109d-0b0f-4588-80eb-d42c71aeb626",
            "2907ba3b-e136-4cbd-b6e1-c5200cbe5344",
            "9f673bfd-6d4b-4933-93c7-d11a51803e73",
            "cb53e248-8286-4482-9cb5-ced82f237890",
            "94addb87-2321-4cb3-9132-537897193f66",
            "f2445ffc-d0c4-4040-8b6e-9ab59edff403",
            "eaf37030-1e17-4aa7-ba02-cf5365869a7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 965,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "32eb4b0f-2200-4d76-a8b2-4bc4a67c7dfa",
          "title": "Bad Request to Get query SortBy Top Rated",
          "fullFile": "C:\\raizakurniawan\\apitestMR\\apiMythRepo\\dev\\get400.js",
          "file": "\\apiMythRepo\\dev\\get400.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Bad Request to Get Confirm Mythic Sorting List by Top Rated",
              "fullTitle": "Bad Request to Get query SortBy Top Rated Bad Request to Get Confirm Mythic Sorting List by Top Rated",
              "timedOut": false,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n     const res = await axios.get(createURL('confirmed/mythic?sortBy=5'))\n     console.log(res.data)\n     expect(res.data.page);\n     expect.fail('400');\n} catch (error) {\n     expect(error.response.status).to.equal(400)    \n}",
              "err": {},
              "uuid": "d30b2d17-3f67-47d9-8d3f-b50e0a15363a",
              "parentUUID": "32eb4b0f-2200-4d76-a8b2-4bc4a67c7dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bad Request to Get Unconfirm Mythic Sorting List by Top Rated",
              "fullTitle": "Bad Request to Get query SortBy Top Rated Bad Request to Get Unconfirm Mythic Sorting List by Top Rated",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n     const res = await axios.get(createURL('unconfirmed/mythic?sortBy=5'))\n     console.log(res.data)\n     expect(res.data.page);\n     expect.fail('400');\n} catch (error) {\n     expect(error.response.status).to.equal(400)    \n}",
              "err": {},
              "uuid": "56c23cbd-41eb-420f-bef4-1e036b798d4d",
              "parentUUID": "32eb4b0f-2200-4d76-a8b2-4bc4a67c7dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bad Request to Get Confirm Casefile Sorting List by Top Rated",
              "fullTitle": "Bad Request to Get query SortBy Top Rated Bad Request to Get Confirm Casefile Sorting List by Top Rated",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n     const res = await axios.get(createURL('confirmed/casefile?sortBy=5'))\n     console.log(res.data)\n     expect(res.data.page);\n     expect.fail('400');\n} catch (error) {\n     expect(error.response.status).to.equal(400)    \n}",
              "err": {},
              "uuid": "e240a175-dfc4-4275-a8d0-c4bc917dd1ed",
              "parentUUID": "32eb4b0f-2200-4d76-a8b2-4bc4a67c7dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bad Request to Get Unconfirm Casefile Sorting List by Top Rated",
              "fullTitle": "Bad Request to Get query SortBy Top Rated Bad Request to Get Unconfirm Casefile Sorting List by Top Rated",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n     const res = await axios.get(createURL('unconfirmed/casefile?sortBy=5'))\n     console.log(res.data)\n     expect(res.data.page);\n     expect.fail('400');\n} catch (error) {\n     expect(error.response.status).to.equal(400)    \n}",
              "err": {},
              "uuid": "aa76223e-772e-48c5-b73c-9a4f1753697b",
              "parentUUID": "32eb4b0f-2200-4d76-a8b2-4bc4a67c7dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bad Request to Get Confirm Dossier Sorting List by Top Rated",
              "fullTitle": "Bad Request to Get query SortBy Top Rated Bad Request to Get Confirm Dossier Sorting List by Top Rated",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n     const res = await axios.get(createURL('confirmed/dossier?sortBy=5'))\n     console.log(res.data)\n     expect(res.data.page);\n     expect.fail('400');\n} catch (error) {\n     expect(error.response.status).to.equal(400)    \n}",
              "err": {},
              "uuid": "602c0ce8-de25-4ae9-8b1d-de4dc62eec4a",
              "parentUUID": "32eb4b0f-2200-4d76-a8b2-4bc4a67c7dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bad Request to Get Unconfirm Dossier Sorting List by Top Rated",
              "fullTitle": "Bad Request to Get query SortBy Top Rated Bad Request to Get Unconfirm Dossier Sorting List by Top Rated",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n     const res = await axios.get(createURL('unconfirmed/dossier?sortBy=5'))\n     console.log(res.data)\n     expect(res.data.page);\n     expect.fail('400');\n} catch (error) {\n     expect(error.response.status).to.equal(400)    \n}",
              "err": {},
              "uuid": "55d878e7-b3bc-42eb-bc00-971cebff7cde",
              "parentUUID": "32eb4b0f-2200-4d76-a8b2-4bc4a67c7dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bad Request to Get Confirm Addendum Sorting List by Top Rated",
              "fullTitle": "Bad Request to Get query SortBy Top Rated Bad Request to Get Confirm Addendum Sorting List by Top Rated",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n     const res = await axios.get(createURL('confirmed/addendum?sortBy=5'))\n     console.log(res.data)\n     expect(res.data.page);\n     expect.fail('400');\n} catch (error) {\n     expect(error.response.status).to.equal(400)    \n}",
              "err": {},
              "uuid": "09bdb8ba-224f-4760-9aba-5923f4d4d94c",
              "parentUUID": "32eb4b0f-2200-4d76-a8b2-4bc4a67c7dfa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Bad Request to Get Unconfirm Addendum Sorting List by Top Rated",
              "fullTitle": "Bad Request to Get query SortBy Top Rated Bad Request to Get Unconfirm Addendum Sorting List by Top Rated",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n     const res = await axios.get(createURL('unconfirmed/addendum?sortBy=5'))\n     console.log(res.data)\n     expect(res.data.page);\n     expect.fail('400');\n} catch (error) {\n     expect(error.response.status).to.equal(400)    \n}",
              "err": {},
              "uuid": "da81a230-e79e-447b-981d-a4d324215a29",
              "parentUUID": "32eb4b0f-2200-4d76-a8b2-4bc4a67c7dfa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d30b2d17-3f67-47d9-8d3f-b50e0a15363a",
            "56c23cbd-41eb-420f-bef4-1e036b798d4d",
            "e240a175-dfc4-4275-a8d0-c4bc917dd1ed",
            "aa76223e-772e-48c5-b73c-9a4f1753697b",
            "602c0ce8-de25-4ae9-8b1d-de4dc62eec4a",
            "55d878e7-b3bc-42eb-bc00-971cebff7cde",
            "09bdb8ba-224f-4760-9aba-5923f4d4d94c",
            "da81a230-e79e-447b-981d-a4d324215a29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 285,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "98ac03e8-7212-4254-b3d4-5202e9166904",
          "title": "Mythic Repository Get API 404 Response",
          "fullFile": "C:\\raizakurniawan\\apitestMR\\apiMythRepo\\dev\\get404.js",
          "file": "\\apiMythRepo\\dev\\get404.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should not be able to get Confirm Mythic list 404",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Confirm Mythic list 404",
              "timedOut": false,
              "duration": 58,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('confirmed/mythics'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n    \n} catch (error) {\n    expect(error.response.status).to.equal(404);  \n}",
              "err": {},
              "uuid": "3ca9b792-597b-42be-b3ff-5e5da8ed115f",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to get Unconfirm Mythic list 404",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Unconfirm Mythic list 404",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('unconfirmed/mythics'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404);\n}",
              "err": {},
              "uuid": "9915355d-b7bd-45a2-a883-e8bcfbb2f2ad",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to get Mythic Detail 404 ",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Mythic Detail 404 ",
              "timedOut": false,
              "duration": 1875,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try { \n    const res = await axios.get(createURL('mythic/M-10011245'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404);\n}",
              "err": {},
              "uuid": "a3549f8a-a0d6-49b4-8fce-5a5ff17469a0",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to get Confirm Casefile list 404",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Confirm Casefile list 404",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('confirmed/casefiles'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404)\n}",
              "err": {},
              "uuid": "f5a2175e-af4e-4d66-86cd-1ed8a7562f46",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to get Unconfirm Casefile list 404",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Unconfirm Casefile list 404",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('unconfirmed/casefiles'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404)\n}",
              "err": {},
              "uuid": "ae3b4ecf-81e4-4492-b48b-3a7612b4b607",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to get Casefile Detail 404",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Casefile Detail 404",
              "timedOut": false,
              "duration": 1740,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('casefile/C-10022342'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404)\n}",
              "err": {},
              "uuid": "b0b6aabc-2638-41ea-b741-fa2b59a8a918",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to get Confirm Dossier list 404 ",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Confirm Dossier list 404 ",
              "timedOut": false,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('confirmed/dossiers'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404)\n}",
              "err": {},
              "uuid": "8d13d2d4-22dc-4126-bedb-3eb27ebabb4c",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to get Unconfirm Dossier list 404",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Unconfirm Dossier list 404",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('unconfirmed/dossiers'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404)\n}",
              "err": {},
              "uuid": "9d53f587-1317-4ee6-b860-bf8f3449629a",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to get Dossier Detail 404",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Dossier Detail 404",
              "timedOut": false,
              "duration": 1080,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('dossier/D-100223432'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404)\n}",
              "err": {},
              "uuid": "a197f590-acfa-4065-bbbf-725e5beb1d9c",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to get Confirm Addendum list 404",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Confirm Addendum list 404",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('confirmed/addendumss'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404)\n}",
              "err": {},
              "uuid": "2fdded96-ef69-488c-868c-c80379eb5648",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to get Unconfirm Addendum list 404",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Unconfirm Addendum list 404",
              "timedOut": false,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('uconfirmed/addendumss'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404)\n}",
              "err": {},
              "uuid": "62deb560-a847-496a-b8c8-35cd05db94fe",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to get Addendum Detail ",
              "fullTitle": "Mythic Repository Get API 404 Response Should not be able to get Addendum Detail ",
              "timedOut": false,
              "duration": 827,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('addendum/A-1001-232011-01'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404)\n}",
              "err": {},
              "uuid": "65fb14f8-114a-4a75-abed-866e343d9746",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home page Top Rated 404 ",
              "fullTitle": "Mythic Repository Get API 404 Response Home page Top Rated 404 ",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('home/tops-rated'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404)\n}",
              "err": {},
              "uuid": "a4db5fb2-f8af-4314-bc35-9c09ce03ea92",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Home page Last Confirmed 404 ",
              "fullTitle": "Mythic Repository Get API 404 Response Home page Last Confirmed 404 ",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const res = await axios.get(createURL('home/last-confirmedss'))\n    console.log(res.data)\n    expect(res.data.page);\n    expect.fail('404');\n} catch (error) {\n    expect(error.response.status).to.equal(404)\n}",
              "err": {},
              "uuid": "3c3201e0-7560-4c6f-9729-3f849bea3542",
              "parentUUID": "98ac03e8-7212-4254-b3d4-5202e9166904",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ca9b792-597b-42be-b3ff-5e5da8ed115f",
            "9915355d-b7bd-45a2-a883-e8bcfbb2f2ad",
            "a3549f8a-a0d6-49b4-8fce-5a5ff17469a0",
            "f5a2175e-af4e-4d66-86cd-1ed8a7562f46",
            "ae3b4ecf-81e4-4492-b48b-3a7612b4b607",
            "b0b6aabc-2638-41ea-b741-fa2b59a8a918",
            "8d13d2d4-22dc-4126-bedb-3eb27ebabb4c",
            "9d53f587-1317-4ee6-b860-bf8f3449629a",
            "a197f590-acfa-4065-bbbf-725e5beb1d9c",
            "2fdded96-ef69-488c-868c-c80379eb5648",
            "62deb560-a847-496a-b8c8-35cd05db94fe",
            "65fb14f8-114a-4a75-abed-866e343d9746",
            "a4db5fb2-f8af-4314-bc35-9c09ce03ea92",
            "3c3201e0-7560-4c6f-9729-3f849bea3542"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6036,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}